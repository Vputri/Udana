{"ast":null,"code":"var _jsxFileName = \"/home/vika/Documents/blog-strapi/frontend/src/queries/article/articles.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useHistory } from 'react-router';\nimport { gql, useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LINKS_PER_PAGE = 5;\nconst ARTICLES_QUERY = gql`\n  query Articles(\n    $take: Int\n    $skip: Int\n    $orderBy: LinkOrderByInput){\n    articles(take: $take, skip: $skip, orderBy: $orderBy){\n      slug\n      title\n      content\n      description\n      author{\n        name\n      }\n      category {\n        slug\n        name\n      }\n      image {\n        url\n      }\n    }\n  }\n`;\n\nconst Link = props => {\n  _s();\n\n  const {\n    link\n  } = props;\n  const authToken = localStorage.getItem(AUTH_TOKEN);\n  const take = LINKS_PER_PAGE;\n  const skip = 0;\n  const orderBy = {\n    createdAt: 'desc'\n  };\n  const [vote] = useMutation(VOTE_MUTATION, {\n    variables: {\n      linkId: link.id\n    },\n\n    update(cache, {\n      data: {\n        vote\n      }\n    }) {\n      const {\n        feed\n      } = cache.readQuery({\n        query: FEED_QUERY,\n        variables: {\n          take,\n          skip,\n          orderBy\n        }\n      });\n      const updatedLinks = feed.links.map(feedLink => {\n        if (feedLink.id === link.id) {\n          return { ...feedLink,\n            votes: [...feedLink.votes, vote]\n          };\n        }\n\n        return feedLink;\n      });\n      cache.writeQuery({\n        query: FEED_QUERY,\n        data: {\n          feed: {\n            links: updatedLinks\n          }\n        },\n        variables: {\n          take,\n          skip,\n          orderBy\n        }\n      });\n    }\n\n  });\n};\n\n_s(Link, \"0VV/DEV2+2i6G/De1rIEbK8fykg=\", true);\n\n_c = Link;\n\nconst getLinksToRender = (isNewPage, data) => {\n  if (isNewPage) {\n    return data.feed.links;\n  }\n\n  const rankedLinks = data.feed.links.slice();\n  rankedLinks.sort((l1, l2) => l2.votes.length - l1.votes.length);\n  return rankedLinks;\n};\n\nconst getQueryVariables = (isNewPage, page) => {\n  const skip = isNewPage ? (page - 1) * LINKS_PER_PAGE : 0;\n  const take = isNewPage ? LINKS_PER_PAGE : 100;\n  const orderBy = {\n    createdAt: 'desc'\n  };\n  return {\n    take,\n    skip,\n    orderBy\n  };\n};\n\nconst LinkList = () => {\n  _s2();\n\n  const history = useHistory();\n  const isNewPage = history.location.pathname.includes('new');\n  const pageIndexParams = history.location.pathname.split('/');\n  const page = parseInt(pageIndexParams[pageIndexParams.length - 1]);\n  const pageIndex = page ? (page - 1) * LINKS_PER_PAGE : 0;\n  const {\n    data,\n    loading,\n    error,\n    subscribeToMore\n  } = useQuery(ARTICLES_QUERY, {\n    variables: getQueryVariables(isNewPage, page)\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(error, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }, this), data && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [getLinksToRender(isNewPage, data).map((link, index) => /*#__PURE__*/_jsxDEV(Link, {\n        link: link,\n        index: index + pageIndex\n      }, link.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }, this)), isNewPage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex ml4 mv3 gray\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pointer mr2\",\n          onClick: () => {\n            if (page > 1) {\n              history.push(`/new/${page - 1}`);\n            }\n          },\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pointer\",\n          onClick: () => {\n            if (page <= data.feed.count / LINKS_PER_PAGE) {\n              const nextPage = page + 1;\n              history.push(`/new/${nextPage}`);\n            }\n          },\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s2(LinkList, \"uZ+VzZ/K/WIzLe4+uXI1/G8CEvs=\", false, function () {\n  return [useHistory, useQuery];\n});\n\n_c2 = LinkList;\nexport default ARTICLES_QUERY;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Link\");\n$RefreshReg$(_c2, \"LinkList\");","map":{"version":3,"sources":["/home/vika/Documents/blog-strapi/frontend/src/queries/article/articles.js"],"names":["useHistory","gql","useQuery","LINKS_PER_PAGE","ARTICLES_QUERY","Link","props","link","authToken","localStorage","getItem","AUTH_TOKEN","take","skip","orderBy","createdAt","vote","useMutation","VOTE_MUTATION","variables","linkId","id","update","cache","data","feed","readQuery","query","FEED_QUERY","updatedLinks","links","map","feedLink","votes","writeQuery","getLinksToRender","isNewPage","rankedLinks","slice","sort","l1","l2","length","getQueryVariables","page","LinkList","history","location","pathname","includes","pageIndexParams","split","parseInt","pageIndex","loading","error","subscribeToMore","JSON","stringify","index","push","count","nextPage"],"mappings":"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","sourcesContent":["import { useHistory } from 'react-router';\nimport { gql, useQuery } from '@apollo/client';\n\nconst LINKS_PER_PAGE = 5;\nconst ARTICLES_QUERY = gql`\n  query Articles(\n    $take: Int\n    $skip: Int\n    $orderBy: LinkOrderByInput){\n    articles(take: $take, skip: $skip, orderBy: $orderBy){\n      slug\n      title\n      content\n      description\n      author{\n        name\n      }\n      category {\n        slug\n        name\n      }\n      image {\n        url\n      }\n    }\n  }\n`;\n\nconst Link = (props) => {\n  const { link } = props;\n  const authToken = localStorage.getItem(AUTH_TOKEN);\n\n  const take = LINKS_PER_PAGE;\n  const skip = 0;\n  const orderBy = { createdAt: 'desc' };\n\n  const [vote] = useMutation(VOTE_MUTATION, {\n    variables: {\n      linkId: link.id\n    },\n    update(cache, { data: { vote } }) {\n      const { feed } = cache.readQuery({\n        query: FEED_QUERY,\n        variables: {\n          take,\n          skip,\n          orderBy\n        }\n      });\n\n      const updatedLinks = feed.links.map((feedLink) => {\n        if (feedLink.id === link.id) {\n          return {\n            ...feedLink,\n            votes: [...feedLink.votes, vote]\n          };\n        }\n        return feedLink;\n      });\n\n      cache.writeQuery({\n        query: FEED_QUERY,\n        data: {\n          feed: {\n            links: updatedLinks\n          }\n        },\n        variables: {\n          take,\n          skip,\n          orderBy\n        }\n      });\n    }\n  });\n};\n\nconst getLinksToRender = (isNewPage, data) => {\n  if (isNewPage) {\n    return data.feed.links;\n  }\n  const rankedLinks = data.feed.links.slice();\n  rankedLinks.sort(\n    (l1, l2) => l2.votes.length - l1.votes.length\n  );\n  return rankedLinks;\n};\n\nconst getQueryVariables = (isNewPage, page) => {\n  const skip = isNewPage ? (page - 1) * LINKS_PER_PAGE : 0;\n  const take = isNewPage ? LINKS_PER_PAGE : 100;\n  const orderBy = { createdAt: 'desc' };\n  return { take, skip, orderBy };\n};\n\nconst LinkList = () => {\n  const history = useHistory();\n  const isNewPage = history.location.pathname.includes(\n    'new'\n  );\n  const pageIndexParams = history.location.pathname.split(\n    '/'\n  );\n  const page = parseInt(\n    pageIndexParams[pageIndexParams.length - 1]\n  );\n\n  const pageIndex = page ? (page - 1) * LINKS_PER_PAGE : 0;\n\n  const {\n    data,\n    loading,\n    error,\n    subscribeToMore\n  } = useQuery(ARTICLES_QUERY, {\n    variables: getQueryVariables(isNewPage, page)\n  });\n\n\n  return (\n    <>\n      {loading && <p>Loading...</p>}\n      {error && <pre>{JSON.stringify(error, null, 2)}</pre>}\n      {data && (\n        <>\n          {getLinksToRender(isNewPage, data).map(\n            (link, index) => (\n              <Link\n                key={link.id}\n                link={link}\n                index={index + pageIndex}\n              />\n            )\n          )}\n          {isNewPage && (\n            <div className=\"flex ml4 mv3 gray\">\n              <div\n                className=\"pointer mr2\"\n                onClick={() => {\n                  if (page > 1) {\n                    history.push(`/new/${page - 1}`);\n                  }\n                }}\n              >\n                Previous\n              </div>\n              <div\n                className=\"pointer\"\n                onClick={() => {\n                  if (\n                    page <=\n                    data.feed.count / LINKS_PER_PAGE\n                  ) {\n                    const nextPage = page + 1;\n                    history.push(`/new/${nextPage}`);\n                  }\n                }}\n              >\n                Next\n              </div>\n            </div>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ARTICLES_QUERY;"]},"metadata":{},"sourceType":"module"}