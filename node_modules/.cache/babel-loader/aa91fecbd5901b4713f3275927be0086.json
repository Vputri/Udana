{"ast":null,"code":"var _jsxFileName = \"/home/vika/Documents/blog-strapi/frontend/src/queries/article/articles.js\",\n    _s = $RefreshSig$();\n\nimport { gql, useQuery } from '@apollo/client';\nimport { useHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LINKS_PER_PAGE = 5;\nconst ARTICLES_QUERY = gql`\n  query Articles{\n    articles{\n      slug\n      title\n      content\n      description\n      author{\n        name\n      }\n      category {\n        slug\n        name\n      }\n      image {\n        url\n      }\n    }\n  }\n`;\n\nconst getLinksToRender = (isNewPage, data) => {\n  if (isNewPage) {\n    return data.feed.links;\n  }\n\n  const rankedLinks = data.feed.links.slice();\n  rankedLinks.sort((l1, l2) => l2.votes.length - l1.votes.length);\n  return rankedLinks;\n};\n\nconst getQueryVariables = (isNewPage, page) => {\n  const skip = isNewPage ? (page - 1) * LINKS_PER_PAGE : 0;\n  const take = isNewPage ? LINKS_PER_PAGE : 100;\n  const orderBy = {\n    createdAt: 'desc'\n  };\n  return {\n    take,\n    skip,\n    orderBy\n  };\n};\n\nconst LinkList = () => {\n  _s();\n\n  const history = useHistory();\n  const isNewPage = history.location.pathname.includes('new');\n  const pageIndexParams = history.location.pathname.split('/');\n  const page = parseInt(pageIndexParams[pageIndexParams.length - 1]);\n  const pageIndex = page ? (page - 1) * LINKS_PER_PAGE : 0;\n  const {\n    data,\n    loading,\n    error,\n    subscribeToMore\n  } = useQuery(ARTICLES_QUERY, {\n    variables: getQueryVariables(isNewPage, page)\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(error, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this), data && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isNewPage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex ml4 mv3 gray\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pointer mr2\",\n          onClick: () => {\n            if (page > 1) {\n              history.push(`/new/${page - 1}`);\n            }\n          },\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pointer\",\n          onClick: () => {\n            if (page <= data.feed.count / LINKS_PER_PAGE) {\n              const nextPage = page + 1;\n              history.push(`/new/${nextPage}`);\n            }\n          },\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n};\n\n_s(LinkList, \"uZ+VzZ/K/WIzLe4+uXI1/G8CEvs=\", false, function () {\n  return [useHistory, useQuery];\n});\n\n_c = LinkList;\nexport default ARTICLES_QUERY;\n\nvar _c;\n\n$RefreshReg$(_c, \"LinkList\");","map":{"version":3,"sources":["/home/vika/Documents/blog-strapi/frontend/src/queries/article/articles.js"],"names":["gql","useQuery","useHistory","LINKS_PER_PAGE","ARTICLES_QUERY","getLinksToRender","isNewPage","data","feed","links","rankedLinks","slice","sort","l1","l2","votes","length","getQueryVariables","page","skip","take","orderBy","createdAt","LinkList","history","location","pathname","includes","pageIndexParams","split","parseInt","pageIndex","loading","error","subscribeToMore","variables","JSON","stringify","push","count","nextPage"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,UAAT,QAA2B,cAA3B;;;AAEA,MAAMC,cAAc,GAAG,CAAvB;AACA,MAAMC,cAAc,GAAGJ,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBA;;AAqBA,MAAMK,gBAAgB,GAAG,CAACC,SAAD,EAAYC,IAAZ,KAAqB;AAC5C,MAAID,SAAJ,EAAe;AACb,WAAOC,IAAI,CAACC,IAAL,CAAUC,KAAjB;AACD;;AACD,QAAMC,WAAW,GAAGH,IAAI,CAACC,IAAL,CAAUC,KAAV,CAAgBE,KAAhB,EAApB;AACAD,EAAAA,WAAW,CAACE,IAAZ,CACE,CAACC,EAAD,EAAKC,EAAL,KAAYA,EAAE,CAACC,KAAH,CAASC,MAAT,GAAkBH,EAAE,CAACE,KAAH,CAASC,MADzC;AAGA,SAAON,WAAP;AACD,CATD;;AAWA,MAAMO,iBAAiB,GAAG,CAACX,SAAD,EAAYY,IAAZ,KAAqB;AAC7C,QAAMC,IAAI,GAAGb,SAAS,GAAG,CAACY,IAAI,GAAG,CAAR,IAAaf,cAAhB,GAAiC,CAAvD;AACA,QAAMiB,IAAI,GAAGd,SAAS,GAAGH,cAAH,GAAoB,GAA1C;AACA,QAAMkB,OAAO,GAAG;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAAhB;AACA,SAAO;AAAEF,IAAAA,IAAF;AAAQD,IAAAA,IAAR;AAAcE,IAAAA;AAAd,GAAP;AACD,CALD;;AAOA,MAAME,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,OAAO,GAAGtB,UAAU,EAA1B;AACA,QAAMI,SAAS,GAAGkB,OAAO,CAACC,QAAR,CAAiBC,QAAjB,CAA0BC,QAA1B,CAChB,KADgB,CAAlB;AAGA,QAAMC,eAAe,GAAGJ,OAAO,CAACC,QAAR,CAAiBC,QAAjB,CAA0BG,KAA1B,CACtB,GADsB,CAAxB;AAGA,QAAMX,IAAI,GAAGY,QAAQ,CACnBF,eAAe,CAACA,eAAe,CAACZ,MAAhB,GAAyB,CAA1B,CADI,CAArB;AAIA,QAAMe,SAAS,GAAGb,IAAI,GAAG,CAACA,IAAI,GAAG,CAAR,IAAaf,cAAhB,GAAiC,CAAvD;AAEA,QAAM;AACJI,IAAAA,IADI;AAEJyB,IAAAA,OAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA;AAJI,MAKFjC,QAAQ,CAACG,cAAD,EAAiB;AAC3B+B,IAAAA,SAAS,EAAElB,iBAAiB,CAACX,SAAD,EAAYY,IAAZ;AADD,GAAjB,CALZ;AASA,sBACE;AAAA,eACGc,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADd,EAEGC,KAAK,iBAAI;AAAA,gBAAMG,IAAI,CAACC,SAAL,CAAeJ,KAAf,EAAsB,IAAtB,EAA4B,CAA5B;AAAN;AAAA;AAAA;AAAA;AAAA,YAFZ,EAGG1B,IAAI,iBACH;AAAA,gBACGD,SAAS,iBACR;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,aADZ;AAEE,UAAA,OAAO,EAAE,MAAM;AACb,gBAAIY,IAAI,GAAG,CAAX,EAAc;AACZM,cAAAA,OAAO,CAACc,IAAR,CAAc,QAAOpB,IAAI,GAAG,CAAE,EAA9B;AACD;AACF,WANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE;AACE,UAAA,SAAS,EAAC,SADZ;AAEE,UAAA,OAAO,EAAE,MAAM;AACb,gBACEA,IAAI,IACJX,IAAI,CAACC,IAAL,CAAU+B,KAAV,GAAkBpC,cAFpB,EAGE;AACA,oBAAMqC,QAAQ,GAAGtB,IAAI,GAAG,CAAxB;AACAM,cAAAA,OAAO,CAACc,IAAR,CAAc,QAAOE,QAAS,EAA9B;AACD;AACF,WAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,qBAJJ;AAAA,kBADF;AAsCD,CA7DD;;GAAMjB,Q;UACYrB,U,EAkBZD,Q;;;KAnBAsB,Q;AA+DN,eAAenB,cAAf","sourcesContent":["import { gql, useQuery } from '@apollo/client';\nimport { useHistory } from 'react-router';\n\nconst LINKS_PER_PAGE = 5;\nconst ARTICLES_QUERY = gql`\n  query Articles{\n    articles{\n      slug\n      title\n      content\n      description\n      author{\n        name\n      }\n      category {\n        slug\n        name\n      }\n      image {\n        url\n      }\n    }\n  }\n`;\n\nconst getLinksToRender = (isNewPage, data) => {\n  if (isNewPage) {\n    return data.feed.links;\n  }\n  const rankedLinks = data.feed.links.slice();\n  rankedLinks.sort(\n    (l1, l2) => l2.votes.length - l1.votes.length\n  );\n  return rankedLinks;\n};\n\nconst getQueryVariables = (isNewPage, page) => {\n  const skip = isNewPage ? (page - 1) * LINKS_PER_PAGE : 0;\n  const take = isNewPage ? LINKS_PER_PAGE : 100;\n  const orderBy = { createdAt: 'desc' };\n  return { take, skip, orderBy };\n};\n\nconst LinkList = () => {\n  const history = useHistory();\n  const isNewPage = history.location.pathname.includes(\n    'new'\n  );\n  const pageIndexParams = history.location.pathname.split(\n    '/'\n  );\n  const page = parseInt(\n    pageIndexParams[pageIndexParams.length - 1]\n  );\n\n  const pageIndex = page ? (page - 1) * LINKS_PER_PAGE : 0;\n\n  const {\n    data,\n    loading,\n    error,\n    subscribeToMore\n  } = useQuery(ARTICLES_QUERY, {\n    variables: getQueryVariables(isNewPage, page)\n  });\n\n  return (\n    <>\n      {loading && <p>Loading...</p>}\n      {error && <pre>{JSON.stringify(error, null, 2)}</pre>}\n      {data && (\n        <>\n          {isNewPage && (\n            <div className=\"flex ml4 mv3 gray\">\n              <div\n                className=\"pointer mr2\"\n                onClick={() => {\n                  if (page > 1) {\n                    history.push(`/new/${page - 1}`);\n                  }\n                }}\n              >\n                Previous\n              </div>\n              <div\n                className=\"pointer\"\n                onClick={() => {\n                  if (\n                    page <=\n                    data.feed.count / LINKS_PER_PAGE\n                  ) {\n                    const nextPage = page + 1;\n                    history.push(`/new/${nextPage}`);\n                  }\n                }}\n              >\n                Next\n              </div>\n            </div>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ARTICLES_QUERY;"]},"metadata":{},"sourceType":"module"}